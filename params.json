{"name":"Cricket","tagline":"A GUI tool for running Python test suites.","body":"# Cricket\r\n\r\nCricket a graphical tool that helps you run your test suites.\r\n\r\nNormal unittest test runners dumps all output to the console, and provide very\r\nlittle detail while the suite is running. As a result:\r\n\r\n * You can't start looking at failures until the test suite has completed running,\r\n\r\n * It isn't a very accessible format for identifying patterns in test failures,\r\n\r\n * It can be hard (or cumbersome) to re-run any tests that have failed.\r\n\r\nWhy the name **cricket**? [Test Cricket](http://en.wikipedia.org/wiki/Test_cricket) is the most prestigious version of the game of cricket. Games last for up to 5 days... just like running some\r\ntest suites. The usual approach for making cricket watchable is a generous dose of beer; in programming, [Balmer Peak](http://xkcd.com/323/) limits come into effect, so something else is required...\r\n\r\n## Quickstart\r\n\r\nAt present, Cricket only has support for Django project test suites.\r\n\r\nIn your Django project, install cricket, and then run it:\r\n\r\n    $ pip install cricket\r\n    $ python -m cricket.django\r\n\r\nThis will pop up a GUI window. Hit \"Run all\", and watch your test suite\r\nexecute. A progress bar is displayed in the bottom right hand corner of\r\nthe window, along with an estimate of time remaining.\r\n\r\nWhile the suite is running, you can click on test names to see the output\r\nof that test. If the test passed, it will be displayed in green; other test\r\nresults will be shown in other colors.\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}